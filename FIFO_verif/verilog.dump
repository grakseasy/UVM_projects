$date
    Feb  2, 2023  16:38:19
$end
$version
    TOOL:	xmsim(64)	22.03-s002
$end
$timescale
    100 ps
$end

$scope module fifo_tb $end
$var parameter 32 !    DATA_WIDTH $end
$var parameter 32 "    ADDR_WIDTH $end
$var parameter 32 #    FIFO_DEPTH $end
$var reg       1 $    clk $end
$var reg       1 %    rst $end
$var reg       1 &    rd_en $end
$var reg       1 '    wr_en $end
$var reg       8 (    tb_data_in [7:0] $end
$var wire      1 )    full  $end
$var wire      1 *    empty  $end
$var wire      1 +    wrap_on_full  $end
$var wire      8 ,    tb_data_out [7:0] $end

$scope module dut_if $end
$var wire      1 -    clk  $end
$var wire      1 .    rst  $end
$var reg       8 /    din [7:0] $end
$var reg       8 0    dout [7:0] $end
$var reg       1 1    wr_en $end
$var reg       1 2    rd_en $end
$var reg       1 3    full $end
$var reg       1 4    empty $end
$var reg       1 5    wrap_on_full $end
$upscope $end


$scope module dut $end
$var parameter 32 6    DATA_WIDTH $end
$var parameter 32 7    ADDR_WIDTH $end
$var parameter 32 8    FIFO_DEPTH $end
$var wire      1 9    clk  $end
$var wire      1 :    rst_n  $end
$var wire      1 ;    wrap_on_full  $end
$var wire      1 <    rd_en  $end
$var wire      1 =    wr_en  $end
$var wire      8 >    data_in [7:0] $end
$var wire      1 ?    full  $end
$var wire      1 @    empty  $end
$var reg       8 A    data_out [7:0] $end
$var reg       8 B    mem[0] [7:0] $end
$var reg       8 C    mem[1] [7:0] $end
$var reg       8 D    mem[2] [7:0] $end
$var reg       8 E    mem[3] [7:0] $end
$var reg       8 F    mem[4] [7:0] $end
$var reg       8 G    mem[5] [7:0] $end
$var reg       8 H    mem[6] [7:0] $end
$var reg       8 I    mem[7] [7:0] $end
$var reg       8 J    mem[8] [7:0] $end
$var reg       8 K    mem[9] [7:0] $end
$var reg       8 L    mem[10] [7:0] $end
$var reg       8 M    mem[11] [7:0] $end
$var reg       8 N    mem[12] [7:0] $end
$var reg       8 O    mem[13] [7:0] $end
$var reg       8 P    mem[14] [7:0] $end
$var reg       8 Q    mem[15] [7:0] $end
$var reg       8 R    mem[16] [7:0] $end
$var reg       8 S    mem[17] [7:0] $end
$var reg       8 T    mem[18] [7:0] $end
$var reg       8 U    mem[19] [7:0] $end
$var reg       8 V    mem[20] [7:0] $end
$var reg       8 W    mem[21] [7:0] $end
$var reg       8 X    mem[22] [7:0] $end
$var reg       8 Y    mem[23] [7:0] $end
$var reg       8 Z    mem[24] [7:0] $end
$var reg       8 [    mem[25] [7:0] $end
$var reg       8 \    mem[26] [7:0] $end
$var reg       8 ]    mem[27] [7:0] $end
$var reg       8 ^    mem[28] [7:0] $end
$var reg       8 _    mem[29] [7:0] $end
$var reg       8 `    mem[30] [7:0] $end
$var reg       8 a    mem[31] [7:0] $end
$var reg       8 b    mem[32] [7:0] $end
$var reg       8 c    mem[33] [7:0] $end
$var reg       8 d    mem[34] [7:0] $end
$var reg       8 e    mem[35] [7:0] $end
$var reg       8 f    mem[36] [7:0] $end
$var reg       8 g    mem[37] [7:0] $end
$var reg       8 h    mem[38] [7:0] $end
$var reg       8 i    mem[39] [7:0] $end
$var reg       8 j    mem[40] [7:0] $end
$var reg       8 k    mem[41] [7:0] $end
$var reg       8 l    mem[42] [7:0] $end
$var reg       8 m    mem[43] [7:0] $end
$var reg       8 n    mem[44] [7:0] $end
$var reg       8 o    mem[45] [7:0] $end
$var reg       8 p    mem[46] [7:0] $end
$var reg       8 q    mem[47] [7:0] $end
$var reg       8 r    mem[48] [7:0] $end
$var reg       8 s    mem[49] [7:0] $end
$var reg       8 t    mem[50] [7:0] $end
$var reg       8 u    mem[51] [7:0] $end
$var reg       8 v    mem[52] [7:0] $end
$var reg       8 w    mem[53] [7:0] $end
$var reg       8 x    mem[54] [7:0] $end
$var reg       8 y    mem[55] [7:0] $end
$var reg       8 z    mem[56] [7:0] $end
$var reg       8 {    mem[57] [7:0] $end
$var reg       8 |    mem[58] [7:0] $end
$var reg       8 }    mem[59] [7:0] $end
$var reg       8 ~    mem[60] [7:0] $end
$var reg       8 !!   mem[61] [7:0] $end
$var reg       8 "!   mem[62] [7:0] $end
$var reg       8 #!   mem[63] [7:0] $end
$var reg       8 $!   mem[64] [7:0] $end
$var reg       8 %!   mem[65] [7:0] $end
$var reg       8 &!   mem[66] [7:0] $end
$var reg       8 '!   mem[67] [7:0] $end
$var reg       8 (!   mem[68] [7:0] $end
$var reg       8 )!   mem[69] [7:0] $end
$var reg       8 *!   mem[70] [7:0] $end
$var reg       8 +!   mem[71] [7:0] $end
$var reg       8 ,!   mem[72] [7:0] $end
$var reg       8 -!   mem[73] [7:0] $end
$var reg       8 .!   mem[74] [7:0] $end
$var reg       8 /!   mem[75] [7:0] $end
$var reg       8 0!   mem[76] [7:0] $end
$var reg       8 1!   mem[77] [7:0] $end
$var reg       8 2!   mem[78] [7:0] $end
$var reg       8 3!   mem[79] [7:0] $end
$var reg       8 4!   mem[80] [7:0] $end
$var reg       8 5!   mem[81] [7:0] $end
$var reg       8 6!   mem[82] [7:0] $end
$var reg       8 7!   mem[83] [7:0] $end
$var reg       8 8!   mem[84] [7:0] $end
$var reg       8 9!   mem[85] [7:0] $end
$var reg       8 :!   mem[86] [7:0] $end
$var reg       8 ;!   mem[87] [7:0] $end
$var reg       8 <!   mem[88] [7:0] $end
$var reg       8 =!   mem[89] [7:0] $end
$var reg       8 >!   mem[90] [7:0] $end
$var reg       8 ?!   mem[91] [7:0] $end
$var reg       8 @!   mem[92] [7:0] $end
$var reg       8 A!   mem[93] [7:0] $end
$var reg       8 B!   mem[94] [7:0] $end
$var reg       8 C!   mem[95] [7:0] $end
$var reg       8 D!   mem[96] [7:0] $end
$var reg       8 E!   mem[97] [7:0] $end
$var reg       8 F!   mem[98] [7:0] $end
$var reg       8 G!   mem[99] [7:0] $end
$var reg       8 H!   mem[100] [7:0] $end
$var reg       8 I!   mem[101] [7:0] $end
$var reg       8 J!   mem[102] [7:0] $end
$var reg       8 K!   mem[103] [7:0] $end
$var reg       8 L!   mem[104] [7:0] $end
$var reg       8 M!   mem[105] [7:0] $end
$var reg       8 N!   mem[106] [7:0] $end
$var reg       8 O!   mem[107] [7:0] $end
$var reg       8 P!   mem[108] [7:0] $end
$var reg       8 Q!   mem[109] [7:0] $end
$var reg       8 R!   mem[110] [7:0] $end
$var reg       8 S!   mem[111] [7:0] $end
$var reg       8 T!   mem[112] [7:0] $end
$var reg       8 U!   mem[113] [7:0] $end
$var reg       8 V!   mem[114] [7:0] $end
$var reg       8 W!   mem[115] [7:0] $end
$var reg       8 X!   mem[116] [7:0] $end
$var reg       8 Y!   mem[117] [7:0] $end
$var reg       8 Z!   mem[118] [7:0] $end
$var reg       8 [!   mem[119] [7:0] $end
$var reg       8 \!   mem[120] [7:0] $end
$var reg       8 ]!   mem[121] [7:0] $end
$var reg       8 ^!   mem[122] [7:0] $end
$var reg       8 _!   mem[123] [7:0] $end
$var reg       8 `!   mem[124] [7:0] $end
$var reg       8 a!   mem[125] [7:0] $end
$var reg       8 b!   mem[126] [7:0] $end
$var reg       8 c!   mem[127] [7:0] $end
$var reg       8 d!   mem[128] [7:0] $end
$var reg       8 e!   mem[129] [7:0] $end
$var reg       8 f!   mem[130] [7:0] $end
$var reg       8 g!   mem[131] [7:0] $end
$var reg       8 h!   mem[132] [7:0] $end
$var reg       8 i!   mem[133] [7:0] $end
$var reg       8 j!   mem[134] [7:0] $end
$var reg       8 k!   mem[135] [7:0] $end
$var reg       8 l!   mem[136] [7:0] $end
$var reg       8 m!   mem[137] [7:0] $end
$var reg       8 n!   mem[138] [7:0] $end
$var reg       8 o!   mem[139] [7:0] $end
$var reg       8 p!   mem[140] [7:0] $end
$var reg       8 q!   mem[141] [7:0] $end
$var reg       8 r!   mem[142] [7:0] $end
$var reg       8 s!   mem[143] [7:0] $end
$var reg       8 t!   mem[144] [7:0] $end
$var reg       8 u!   mem[145] [7:0] $end
$var reg       8 v!   mem[146] [7:0] $end
$var reg       8 w!   mem[147] [7:0] $end
$var reg       8 x!   mem[148] [7:0] $end
$var reg       8 y!   mem[149] [7:0] $end
$var reg       8 z!   mem[150] [7:0] $end
$var reg       8 {!   mem[151] [7:0] $end
$var reg       8 |!   mem[152] [7:0] $end
$var reg       8 }!   mem[153] [7:0] $end
$var reg       8 ~!   mem[154] [7:0] $end
$var reg       8 !"   mem[155] [7:0] $end
$var reg       8 ""   mem[156] [7:0] $end
$var reg       8 #"   mem[157] [7:0] $end
$var reg       8 $"   mem[158] [7:0] $end
$var reg       8 %"   mem[159] [7:0] $end
$var reg       8 &"   mem[160] [7:0] $end
$var reg       8 '"   mem[161] [7:0] $end
$var reg       8 ("   mem[162] [7:0] $end
$var reg       8 )"   mem[163] [7:0] $end
$var reg       8 *"   mem[164] [7:0] $end
$var reg       8 +"   mem[165] [7:0] $end
$var reg       8 ,"   mem[166] [7:0] $end
$var reg       8 -"   mem[167] [7:0] $end
$var reg       8 ."   mem[168] [7:0] $end
$var reg       8 /"   mem[169] [7:0] $end
$var reg       8 0"   mem[170] [7:0] $end
$var reg       8 1"   mem[171] [7:0] $end
$var reg       8 2"   mem[172] [7:0] $end
$var reg       8 3"   mem[173] [7:0] $end
$var reg       8 4"   mem[174] [7:0] $end
$var reg       8 5"   mem[175] [7:0] $end
$var reg       8 6"   mem[176] [7:0] $end
$var reg       8 7"   mem[177] [7:0] $end
$var reg       8 8"   mem[178] [7:0] $end
$var reg       8 9"   mem[179] [7:0] $end
$var reg       8 :"   mem[180] [7:0] $end
$var reg       8 ;"   mem[181] [7:0] $end
$var reg       8 <"   mem[182] [7:0] $end
$var reg       8 ="   mem[183] [7:0] $end
$var reg       8 >"   mem[184] [7:0] $end
$var reg       8 ?"   mem[185] [7:0] $end
$var reg       8 @"   mem[186] [7:0] $end
$var reg       8 A"   mem[187] [7:0] $end
$var reg       8 B"   mem[188] [7:0] $end
$var reg       8 C"   mem[189] [7:0] $end
$var reg       8 D"   mem[190] [7:0] $end
$var reg       8 E"   mem[191] [7:0] $end
$var reg       8 F"   mem[192] [7:0] $end
$var reg       8 G"   mem[193] [7:0] $end
$var reg       8 H"   mem[194] [7:0] $end
$var reg       8 I"   mem[195] [7:0] $end
$var reg       8 J"   mem[196] [7:0] $end
$var reg       8 K"   mem[197] [7:0] $end
$var reg       8 L"   mem[198] [7:0] $end
$var reg       8 M"   mem[199] [7:0] $end
$var reg       8 N"   mem[200] [7:0] $end
$var reg       8 O"   mem[201] [7:0] $end
$var reg       8 P"   mem[202] [7:0] $end
$var reg       8 Q"   mem[203] [7:0] $end
$var reg       8 R"   mem[204] [7:0] $end
$var reg       8 S"   mem[205] [7:0] $end
$var reg       8 T"   mem[206] [7:0] $end
$var reg       8 U"   mem[207] [7:0] $end
$var reg       8 V"   mem[208] [7:0] $end
$var reg       8 W"   mem[209] [7:0] $end
$var reg       8 X"   mem[210] [7:0] $end
$var reg       8 Y"   mem[211] [7:0] $end
$var reg       8 Z"   mem[212] [7:0] $end
$var reg       8 ["   mem[213] [7:0] $end
$var reg       8 \"   mem[214] [7:0] $end
$var reg       8 ]"   mem[215] [7:0] $end
$var reg       8 ^"   mem[216] [7:0] $end
$var reg       8 _"   mem[217] [7:0] $end
$var reg       8 `"   mem[218] [7:0] $end
$var reg       8 a"   mem[219] [7:0] $end
$var reg       8 b"   mem[220] [7:0] $end
$var reg       8 c"   mem[221] [7:0] $end
$var reg       8 d"   mem[222] [7:0] $end
$var reg       8 e"   mem[223] [7:0] $end
$var reg       8 f"   mem[224] [7:0] $end
$var reg       8 g"   mem[225] [7:0] $end
$var reg       8 h"   mem[226] [7:0] $end
$var reg       8 i"   mem[227] [7:0] $end
$var reg       8 j"   mem[228] [7:0] $end
$var reg       8 k"   mem[229] [7:0] $end
$var reg       8 l"   mem[230] [7:0] $end
$var reg       8 m"   mem[231] [7:0] $end
$var reg       8 n"   mem[232] [7:0] $end
$var reg       8 o"   mem[233] [7:0] $end
$var reg       8 p"   mem[234] [7:0] $end
$var reg       8 q"   mem[235] [7:0] $end
$var reg       8 r"   mem[236] [7:0] $end
$var reg       8 s"   mem[237] [7:0] $end
$var reg       8 t"   mem[238] [7:0] $end
$var reg       8 u"   mem[239] [7:0] $end
$var reg       8 v"   mem[240] [7:0] $end
$var reg       8 w"   mem[241] [7:0] $end
$var reg       8 x"   mem[242] [7:0] $end
$var reg       8 y"   mem[243] [7:0] $end
$var reg       8 z"   mem[244] [7:0] $end
$var reg       8 {"   mem[245] [7:0] $end
$var reg       8 |"   mem[246] [7:0] $end
$var reg       8 }"   mem[247] [7:0] $end
$var reg       8 ~"   mem[248] [7:0] $end
$var reg       8 !#   mem[249] [7:0] $end
$var reg       8 "#   mem[250] [7:0] $end
$var reg       8 ##   mem[251] [7:0] $end
$var reg       8 $#   mem[252] [7:0] $end
$var reg       8 %#   mem[253] [7:0] $end
$var reg       8 &#   mem[254] [7:0] $end
$var reg       8 '#   mem[255] [7:0] $end
$var reg       8 (#   wr_pointer [7:0] $end
$var reg       8 )#   rd_pointer [7:0] $end
$var reg       8 *#   status_cnt [7:0] $end
$var wire      1 +#   mod_sel  $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b100000000 8
b1000 7
b1000 6
b100000000 #
b1000 "
b1000 !
0$
0%
x&
x'
bx (
z)
z*
z+
bz ,
0-
0.
bx /
b0 0
x1
x2
03
14
x5
09
0:
x;
x<
x=
bx >
0?
1@
b0 A
bx B
bx C
bx D
bx E
bx F
bx G
bx H
bx I
bx J
bx K
bx L
bx M
bx N
bx O
bx P
bx Q
bx R
bx S
bx T
bx U
bx V
bx W
bx X
bx Y
bx Z
bx [
bx \
bx ]
bx ^
bx _
bx `
bx a
bx b
bx c
bx d
bx e
bx f
bx g
bx h
bx i
bx j
bx k
bx l
bx m
bx n
bx o
bx p
bx q
bx r
bx s
bx t
bx u
bx v
bx w
bx x
bx y
bx z
bx {
bx |
bx }
bx ~
bx !!
bx "!
bx #!
bx $!
bx %!
bx &!
bx '!
bx (!
bx )!
bx *!
bx +!
bx ,!
bx -!
bx .!
bx /!
bx 0!
bx 1!
bx 2!
bx 3!
bx 4!
bx 5!
bx 6!
bx 7!
bx 8!
bx 9!
bx :!
bx ;!
bx <!
bx =!
bx >!
bx ?!
bx @!
bx A!
bx B!
bx C!
bx D!
bx E!
bx F!
bx G!
bx H!
bx I!
bx J!
bx K!
bx L!
bx M!
bx N!
bx O!
bx P!
bx Q!
bx R!
bx S!
bx T!
bx U!
bx V!
bx W!
bx X!
bx Y!
bx Z!
bx [!
bx \!
bx ]!
bx ^!
bx _!
bx `!
bx a!
bx b!
bx c!
bx d!
bx e!
bx f!
bx g!
bx h!
bx i!
bx j!
bx k!
bx l!
bx m!
bx n!
bx o!
bx p!
bx q!
bx r!
bx s!
bx t!
bx u!
bx v!
bx w!
bx x!
bx y!
bx z!
bx {!
bx |!
bx }!
bx ~!
bx !"
bx ""
bx #"
bx $"
bx %"
bx &"
bx '"
bx ("
bx )"
bx *"
bx +"
bx ,"
bx -"
bx ."
bx /"
bx 0"
bx 1"
bx 2"
bx 3"
bx 4"
bx 5"
bx 6"
bx 7"
bx 8"
bx 9"
bx :"
bx ;"
bx <"
bx ="
bx >"
bx ?"
bx @"
bx A"
bx B"
bx C"
bx D"
bx E"
bx F"
bx G"
bx H"
bx I"
bx J"
bx K"
bx L"
bx M"
bx N"
bx O"
bx P"
bx Q"
bx R"
bx S"
bx T"
bx U"
bx V"
bx W"
bx X"
bx Y"
bx Z"
bx ["
bx \"
bx ]"
bx ^"
bx _"
bx `"
bx a"
bx b"
bx c"
bx d"
bx e"
bx f"
bx g"
bx h"
bx i"
bx j"
bx k"
bx l"
bx m"
bx n"
bx o"
bx p"
bx q"
bx r"
bx s"
bx t"
bx u"
bx v"
bx w"
bx x"
bx y"
bx z"
bx {"
bx |"
bx }"
bx ~"
bx !#
bx "#
bx ##
bx $#
bx %#
bx &#
bx '#
b0 (#
b0 )#
b0 *#
1+#
$end
#50
1$
1%
1:
1.
19
1-
#100
0$
09
0-
#150
1$
19
1-
#200
0$
09
0-
#250
1$
19
1-
#300
0$
09
0-
#350
1$
19
1-
#400
0$
09
0-
#450
1$
19
1-
#500
0$
09
0-
#550
1$
19
1-
#600
0$
09
0-
#650
1$
19
1-
#700
0$
09
0-
#750
1$
19
1-
#800
0$
09
0-
#850
1$
19
1-
#900
0$
09
0-
#950
1$
19
1-
#1000
0$
09
0-
#1050
1$
19
1-
#1100
0$
09
0-
#1150
1$
19
1-
#1200
0$
09
0-
#1250
1$
19
1-
#1300
0$
09
0-
#1350
1$
19
1-
#1400
0$
09
0-
#1450
1$
19
1-
#1500
0$
09
0-
#1550
1$
19
1-
#1600
0$
09
0-
#1650
1$
19
1-
#1700
0$
09
0-
#1750
1$
19
1-
#1800
0$
09
0-
#1850
1$
19
1-
#1900
0$
09
0-
#1950
1$
19
1-
#2000
0$
09
0-
#2050
1$
19
1-
#2100
0$
09
0-
#2150
1$
19
1-
#2200
0$
09
0-
#2250
1$
19
1-
#2300
0$
09
0-
#2350
1$
19
1-
#2400
0$
09
0-
#2450
1$
19
1-
#2500
0$
09
0-
#2550
1$
19
1-
#2600
0$
09
0-
#2650
1$
19
1-
#2700
0$
09
0-
#2750
1$
19
1-
#2800
0$
09
0-
#2850
1$
19
1-
#2900
0$
09
0-
#2950
1$
19
1-
#3000
0$
09
0-
#3050
1$
19
1-
#3100
0$
09
0-
#3150
1$
19
1-
#3200
0$
09
0-
#3250
1$
19
1-
#3300
0$
09
0-
#3350
1$
19
1-
#3400
0$
09
0-
#3450
1$
19
1-
#3500
0$
09
0-
#3550
1$
19
1-
#3600
0$
09
0-
#3650
1$
19
1-
#3700
0$
09
0-
#3750
1$
19
1-
#3800
0$
09
0-
#3850
1$
19
1-
#3900
0$
09
0-
#3950
1$
19
1-
#4000
0$
09
0-
#4050
1$
19
1-
#4100
0$
09
0-
#4150
1$
19
1-
#4200
0$
09
0-
#4250
1$
19
1-
#4300
0$
09
0-
#4350
1$
19
1-
#4400
0$
09
0-
#4450
1$
19
1-
#4500
0$
09
0-
#4550
1$
19
1-
#4600
0$
09
0-
#4650
1$
19
1-
#4700
0$
09
0-
#4750
1$
19
1-
#4800
0$
09
0-
#4850
1$
19
1-
#4900
0$
09
0-
#4950
1$
19
1-
#5000
0$
09
0-
#5050
1$
19
1-
#5100
0$
09
0-
#5150
1$
19
1-
#5200
0$
09
0-
#5250
1$
19
1-
#5300
0$
09
0-
#5350
1$
19
1-
#5400
0$
09
0-
#5450
1$
19
1-
#5500
0$
09
0-
#5550
1$
19
1-
#5600
0$
09
0-
#5650
1$
19
1-
#5700
0$
09
0-
#5750
1$
19
1-
#5800
0$
09
0-
#5850
1$
19
1-
#5900
0$
09
0-
#5950
1$
19
1-
#6000
0$
09
0-
